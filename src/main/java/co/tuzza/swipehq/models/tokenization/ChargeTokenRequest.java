/*
 * Copyright 2016 Tuzza.co.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package co.tuzza.swipehq.models.tokenization;

import co.tuzza.swipehq.fields.Currency;
import co.tuzza.swipehq.models.BaseRequest;
import java.math.BigDecimal;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 *
 * @author Wesley
 */
public class ChargeTokenRequest implements BaseRequest {

    private String card_token;
    private BigDecimal amount;
    private Currency currency;
    private String description;

    /**
     * The card token as generated by a previous call to createToken
     * (Compulsory)
     *
     * @return
     */
    public String getCardToken() {
        return card_token;
    }

    /**
     * The card token as generated by a previous call to createToken
     * (Compulsory)
     *
     * @param card_token
     */
    public void setCardToken(String card_token) {
        this.card_token = card_token;
    }

    /**
     * The card token as generated by a previous call to createToken
     * (Compulsory)
     *
     * @param card_token
     * @return
     */
    public ChargeTokenRequest withCardToken(String card_token) {
        this.card_token = card_token;

        return this;
    }

    /**
     * Amount to charge (Compulsory)
     *
     * @return
     */
    public BigDecimal getAmount() {
        return amount;
    }

    /**
     * Amount to charge (Compulsory)
     *
     * @param amount
     */
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    /**
     * Amount to charge (Compulsory)
     *
     * @param amount
     * @return
     */
    public ChargeTokenRequest withAmount(BigDecimal amount) {
        this.amount = amount;

        return this;
    }

    /**
     * Currency code (Compulsory)
     *
     * @return
     */
    public Currency getCurrency() {
        return currency;
    }

    /**
     * Currency code (Compulsory)
     *
     * @param currency
     */
    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    /**
     * Currency code (Compulsory)
     *
     * @param currency
     */
    public void setCurrency(String currency) {
        this.currency = Currency.findByAny(currency);
    }

    /**
     * Currency code (Compulsory)
     *
     * @param currency
     * @return
     */
    public ChargeTokenRequest withCurrency(Currency currency) {
        this.currency = currency;

        return this;
    }

    /**
     * Currency code (Compulsory)
     *
     * @param currency
     * @return
     */
    public ChargeTokenRequest withCurrency(String currency) {
        this.setCurrency(currency);

        return this;
    }

    /**
     * Transaction description for your reference (Compulsory)
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * Transaction description for your reference (Compulsory)
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Transaction description for your reference (Compulsory)
     *
     * @param description
     * @return
     */
    public ChargeTokenRequest withDescription(String description) {
        this.description = description;

        return this;
    }

    @Override
    public Map<String, String> toParams() {
        Map<String, String> params = new LinkedHashMap();

        BaseRequest.addIfhasValue("card_token", card_token, params);
        BaseRequest.addIfhasValue("amount", amount, params);
        BaseRequest.addIfhasValue("currency", currency, params);
        BaseRequest.addIfhasValue("description", description, params);

        return params;
    }

    @Override
    public String url() {
        return "https://api.swipehq.com/chargeToken.php";
    }

}
